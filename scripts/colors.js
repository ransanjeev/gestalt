#!/usr/bin/env node
const _ = require('lodash');
const colorTokens = require('./index.common');

const { stylesheet, ruleset, atrule } = require('./cssbuilder');

/* eslint-env node */
/* eslint no-console:0 */

// const colors = [
//   'blue',
//   'dark-gray',
//   'gray',
//   'light-gray',
//   'pine',
//   'red',
//   'olive',
//   'white',
//   'orange',
// ];

// colors.forEach(color => {
//   console.log(
//     `
// /* ${color} */

// .${color} {
//   color: var(--${color});
// }

// .${color}-hover:hover {
//   color: var(--${color});
// }

// .bg-${color} {
//   background-color: var(--${color});
// }

// .bg-${color}-hover:hover {
//   background-color: var(--${color});
// }`
//   );
// });

const cssTokenName = tokenName =>
  `--${_.kebabCase(tokenName).replace('color-', '')}`;

const colorList = () =>
  _.map(colorTokens, (tokenValue, tokenName) => [
    cssTokenName(tokenName),
    tokenValue,
  ]);

const colorClassName = colorName => `${_.camelCase(colorName)}`;

const PRELUDE = `/*
This file was generated by running
  $ ${process.argv.join(' ')}
*/`;

const colorStylesheet = () => {
  const colors = colorList();
  console.log(
    stylesheet(PRELUDE, [
      ruleset(':root', colors),
      ...colors.map(([colorName]) =>
        ruleset(`.${colorClassName(colorName)}`, [
          ['color', `var(${colorName})`],
        ])
      ),
      ...colors.map(([colorName]) =>
        ruleset(`.${colorClassName(colorName)}Bg`, [
          ['background', `var(${colorName})`],
        ])
      ),
    ])
  );
};

colorStylesheet();
