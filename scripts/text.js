#!/usr/bin/env node
/* eslint-env node */
/* eslint no-console:0 */

const { stylesheet, ruleset, atrule } = require('./cssbuilder');

const PRELUDE = `/*
This file was generated by running

  $ ${process.argv.join(' ')}

*/`;
const SCALE = [1, 2, 3, 4, 5];

// const FontSizes = [
//   ['--font-size-1', '12px'],
//   ['--font-size-2', '14px'],
//   ['--font-size-3', '16px'],
//   ['--font-size-4', '18px'],
//   ['--font-size-5', '21px'],
// ];

const ROOT = [
  ['--root-fontsize', '16px'],
  ['--font-primary', '"OpenSans",arial,sans-serif'],
  [
    '--font-accent',
    '"AvenirNextMForBBG","Avenir","Helvetica Neue",helvetica,arial,sans-serif',
  ],

  ['--font-size-1', '12px'],
  ['--font-size-2', '14px'],
  ['--font-size-3', '16px'],
  ['--font-size-4', '18px'],
  ['--font-size-5', '21px'],

  ['--lineheight-5', '2.75rem'],
  ['--lineheight-4', '1.75rem'],
  ['--lineheight-3', '1.5rem'],
  ['--lineheight-2', '1.25rem'],
  ['--lineheight-1', '1rem'],

  ['--letterspacing-5', '-0.04rem'],
  ['--letterspacing-4', '0rem'],
  ['--letterspacing-3', '0rem'],
  ['--letterspacing-2', '0.00625rem'],
  ['--letterspacing-1', '0.01875rem'],
];

// --

const capitalize = str =>
  `${str.substring(0, 1).toUpperCase()}${str.substring(1, str.length)}`;

const classname = (namespace, className) =>
  namespace ? `.${namespace}${capitalize(className)}` : `.${className}`;

const rules = (i, prefix) => [
  ruleset(classname(prefix, `fontSize${i}`), [
    ['font-size', `var(--font-size-${i})`],
    ['line-height', `var(--lineheight-${i})`],
    ['letter-spacing', `var(--letterspacing-${i})`],
  ]),
];

console.log(
  stylesheet(
    PRELUDE,
    [
      ruleset(':root', ROOT),
      ruleset('.Text', [
        [
          'composes',
          "antialiased sansSerif letterSpacing from '../Typography.css'",
        ],
      ]),
    ].concat(
      SCALE.reduce((arr, i) => arr.concat(rules(i)), []),
      atrule(
        '--sm',
        SCALE.reduce((arr, i) => arr.concat(rules(i, 'sm')), [])
      ),
      atrule(
        '--md',
        SCALE.reduce((arr, i) => arr.concat(rules(i, 'md')), [])
      ),
      atrule(
        '--lg',
        SCALE.reduce((arr, i) => arr.concat(rules(i, 'lg')), [])
      )
    )
  )
);
